<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!--  
		* root-context.xml
		  서버 구동과 동시에 web.xml을 거쳐서 바로 로딩 되는 문서
		  => 서버 구동과 동시에 바로 셋팅해야 되는 내용들을 작성하면 됨
		  바로 셋팅 해야되는 것들? 빈으로 등록해야 되는 것들!
		  주로 DB연결 설정, 트랜젝션 처리, 내외부 모듈 연동 등등...
		  
		  1. XML 문서에 셋팅하는 방법
		  2. 어노테이션으로 등록하는 방법
	-->	
	
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>	<!-- name값 변경 불가 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>			<!-- DB의 @호스트이름 포트번호 SID(서비스ID) -->
		<property name="username" value="spring"/>									<!-- name값 정해진대로 모두 소문자로 작성 -->
		<property name="password" value="spring"/>
	</bean>
	
	<!-- 
       BasicDataSource dataSource = new BasicDataSource();
       dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
       dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
       dataSource.setUsername("spring");
       dataSource.setPassword("spring");
       
     -->
     
     <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
     	<property name="configLocation" value="classpath:mybatis-config.xml"/>
     	<property name="dataSource" ref="dataSource"/>
     </bean>
     
	<!--  
		SqlSessionFactory sqlSessionFactory = new SqlSessionFactory();
		sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
		sqlSessionFactory.setDataSource(dataSource);
	-->
	
	<!-- property는 setter 주입! 이라고 생각하면 됨 -->
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!--  
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	-->
	
	<!--  
		constructor-arg 이건 매개변수 생성자 주입! 이라고 생각하면 됨
	-->
	
	<!--  
		property : setter 주입
		constructor-arg : 생성자 주입
	-->
	
	<!-- 파일 업로드 관련 빈 등록 -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<property name="maxUploadSize" value="100000000"/> <!-- 100 메가 바이트 그리고 이건 용량 무제한 -->
		<property name="maxInMemorySize" value="100000000"/>
	
	</bean>
		
	
	
	
	
	
	
</beans>
