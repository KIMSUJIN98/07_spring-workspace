-- 평가자체크리스트
1. mybatis-config.xml 이거 잘보자
	
	- settings 오탈자 유의
	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
	</settings>
	
	- typeAliases 미리 등록해두려면 해당 클래스가 진짜 존재하고 있는 상태여야함(내용은 없더라도)
	<typeAliases>
		<typeAlias type="com.kh.spring.member.model.vo.Member" alias="Member"/>
		<typeAlias type="com.kh.spring.board.model.vo.Board" alias="Board"/>
		<typeAlias type="com.kh.spring.board.model.vo.Reply" alias="Reply"/>
	</typeAliases>
	
	- mappers 미리 등록해두려면 해당 mapper 파일이 진짜 존재하고 있는 상태여야함! 뿐만 아니라 "namespace 등록까지 지정돼있어야함"!!(namespace값 중복 불가)
	<mappers>
		<mapper resource="/mappers/member-mapper.xml"/>
		<mapper resource="/mappers/board-mapper.xml"/>
	</mappers>
	
2. 쿼리 -> 동적으로..!!
select * from member where user_id = ? and user_pwd = ?	// and나 if써서 하는것
like검색하면서 키워드 검색했었음 => title like '%' || {keyword} || '%'

3. root-context.xml
	
	- bean이라는 태그로 xml 등록하기 : class는 못외워도 property 정도는 외워야 함! destroy-method 기능 : 필요없을 때 알아서 소멸시키는..?
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>	<!-- name값 변경 불가 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>									<!-- name값 정해진대로 모두 소문자로 작성 -->
		<property name="password" value="spring"/>
	</bean>

=================================================
-- 서술형
1. mapper의 namespace가 무엇인지? : dao에 쓰려면 알아야하고, 매퍼를 쓰려면 어디에 등록해야한다

2. environment : mybatis에서 연동할 DB정보들을 등록하는 영역

3. dataSource는 POOLED와 UNPOOLED

	* dataSource는 POOLED와 UNPOOLED 둘 중 하나 선택할 수 있음 (ConnectionPool 사용여부)
				
		>> ConnectionPool : Connection 객체를 담아 둘 수 있는 영역 (커넥션 수영장)
							한 번 사용된 Connection 객체를 담아 두면 재사용해서 쓸 수 있음
					
			- POOLED : 사용하겠다.
			- UNFOOLED : 사용하지 않겠다.
			
	<dataSource type="POOLED">
		<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="mybatis"/>
		<property name="password" value="mybatis"/>
	</dataSource>


4. openSession() 메소드가 무엇이고 true/false일때 각각의 동작 상태(자동커밋한다/안한다)

	try {
			InputStream stream = Resources.getResourceAsStream(resource);
			sqlSession = new SqlSessionFactoryBuilder().build(stream).openSession(false);
							// openSession() : 기본값 false
							// openSession(boolean autoCommit) : 자동 커밋 여부 (true면 하겠다, false면 안하겠다)
							// => 개발자가 autoCommit을 직접 설정함
		} catch (IOException e) {
			e.printStackTrace();
		}
		
5. framework가 뭐냐.. : 코드의 재사용성을 늘리고 중복을 최소화하기 위해...

6. 프레임 워크 종류 : 영속성(주로 db관련 => myBatis), xx성, xx성 	// 각각의 속성별 종류

7. mybatis 쿼리 동적 => if, choose, ...					// 아마도 짤 줄 알아야함

8. select문 실행시 resultType 또는 resultMap의 차이점 => 언제 쓰는지  // 예시: count로 update된 결과 행 셀때는 resultType으로 "_int"형을 쓴다
8-1. dml문 resultXXX => 지정하지 않아도 처리된 행수만을 반환하므로 자동으로 리턴된다. (따라서 dml문은 resultXXX를 명시하지 않아도 됨)

9. selectOne()과 selectList()의 차이점  // 실행하고자하는 객체가 한개다/ 한개 이상이다

10. 쿼리짜기 <select> <insert> <update> <delete>

11. typeAliases와 mapper는 등록할 줄 알아야함 (평가자체크리스트 참조)


**** 06_mybatis-workspace(eclipse) : mybatis-config.xml과 Template.java && 07_spring-workspace(STS) : root-context.xml과 mybatis-config.xml 참조하여 공부하기